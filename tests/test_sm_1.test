#!/bin/sh

##################################################################
# Variables
TYPE='--type=semim'
INPUT="${TOP_SRCDIR}/tests/test_sm_1.input"
MODEL="-m ${TOP_BUILD_PREFIX}tests/test_sm_1.model"

OUTPUT_1_1="${TOP_BUILD_PREFIX}tests/test_sm_1_1.output"
EXPECTED_1_1="${TOP_SRCDIR}/tests/test_sm_1_1.expected"
LOG_FILE_1="${TOP_SRCDIR}/tests/test_sm_1.log"
OUTPUT_1_3="${TOP_BUILD_PREFIX}tests/test_sm_1_3.output"
EXPECTED_1_3="${TOP_SRCDIR}/tests/test_sm_1_3.expected"
OUTPUT_1_5="${TOP_BUILD_PREFIX}tests/test_sm_1_5.output"
EXPECTED_1_5="${TOP_SRCDIR}/tests/test_sm_1_5.expected"

##################################################################
# Methods
run_test()
(
    if test $# -ne 6; then
	echo 'Incorrect number of arguments specified for test function.' >&2
	echo 'Bail out!'
	exit 1
    fi

    test_i="$1"
    model_name="$2"
    order="$3"
    seg_len="$4"
    output="$5"
    expected="$6"
    log_file="$7"

    # test convergence
    ${TOP_BUILD_PREFIX}frontend/crfsuite learn ${TYPE} -p feature.max_order=${order} \
	-p feature.max_seg_len=${seg_len} ${MODEL} ${INPUT}

    if test $? -eq 0; then
	echo "ok ${test_i} # ${model_name} model has converged"
    else
	echo "not ok ${test_i} # ${model_name} model has not converged, exit with code $?"
	cat "${log_file}"
    fi

    # test results
    test_i=$((test_i+1))

    ${TOP_BUILD_PREFIX}frontend/crfsuite tag ${TYPE} ${MODEL} ${INPUT} > "${output}"

    diff -q "${output}" "${expected}" &> /dev/null

    if test $? -eq 0; then
	echo "ok ${test_i} # ${model_name} model predicted tags correctly"
    else
	echo "not ok ${test_i} # ${model_name} model predicted tags incorrectly"
    fi
)

##################################################################
# Header
echo '1..6'

##################################################################
# Test 1, 2
run_test 1 '1-st order linear-chain' 1 1 "${OUTPUT_1_1}" "${EXPECTED_1_1}" "${LOG_FILE_1}"

##################################################################
# Test 3, 4
run_test 3 '5-th order semi-markov' 5 -1 "${OUTPUT_1_3}" "${EXPECTED_1_3}" "${LOG_FILE_1}"

##################################################################
# Test 5, 6
run_test 5 '5-th order linear-chain' 5 1 "${OUTPUT_1_5}" "${EXPECTED_1_5}" "${LOG_FILE_1}"
